version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    networks:
      - main_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    hostname: kafka
    networks:
      - main_network
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
  nifi:
    container_name: nifi
    hostname: nifi
    image: apache/nifi:latest
    volumes:
      - ./DockerFile/NIFI:/opt/nifi/nifi-current/Data
    ports:
      - 8443:8443
    networks:
      - main_network 
  jobmanager:
    container_name: flink
    hostname: flink
    networks:
      - main_network
    image: flink:latest
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
       - ./FlinkScripts:/opt/flink-apps
       - ./DockerFile/Flink:/data
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager             
  taskmanager:
    image: flink:latest
    container_name: flink_worker
    hostname: flink_worker
    depends_on:
      - jobmanager
    command: taskmanager
    volumes:
       - ./FlinkScripts:/opt/flink-apps
       - ./DockerFile/Flink:/data
    networks:
      - main_network
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2      
networks:
  main_network:
    name: main_network
    driver: bridge
